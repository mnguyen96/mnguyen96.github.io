{"version":3,"sources":["components/header/index.jsx","components/projects/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","Link","to","Component","Projects","dist_default","index_es","icon","size","color","data-tip","href","src","alt","width","height","library","add","faHome","App","HashRouter","basename","process","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37fb471d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./header.scss\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <div className=\"about\" id=\"console\">\n          <div className=\"contents\">\n            <p>\n              &gt; Print michael.nguyen\n              <br />\n              <span className=\"term\">\n                {\" \"}\n                &nbsp;&nbsp;=&gt; \"Hi! I'm a software developer living in\n                Maryland!\"\n              </span>\n            </p>\n            &gt; michael.interests()\n            <br />\n            <span className=\"term\">\n              &nbsp;&nbsp;=&gt; [\"Programming\", \"Videography\", \"Design\",\n              \"Music\"]\n            </span>\n            <br />\n            <br />\n            &gt; michael.education()\n            <br />\n            <span className=\"term\">\n              &nbsp;&nbsp;=&gt; \"Computer Science graduate from University of\n              Maryland, College Park\"\n              <br />\n              <br />\n            </span>\n            &gt; michael.projects()\n            <br />\n            <span className=\"term\">\n              &nbsp;&nbsp;=&gt;{\" \"}\n              <Link to=\"/projects\" id=\"link\">\n                \"Here are my personal projects!\"\n              </Link>\n              <br />\n            </span>\n            <br />\n            &gt; _\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./projects.scss\";\n\nexport default function Projects() {\n  return (\n    <div>\n      <div className=\"button\">\n        <ReactTooltip />\n        <Link to=\"/\" id=\"link\">\n          <FontAwesomeIcon\n            icon=\"home\"\n            size=\"2x\"\n            color=\"white\"\n            data-tip=\"Home\"\n          />\n        </Link>\n      </div>\n      <div className=\"project\">\n        <h2>My Projects</h2>\n\n        <div className=\"node\">\n          <a href=\"https://github.com/mnguyen96/Stock-sentiment-predictor\">\n            <img\n              src={process.env.PUBLIC_URL + \"/media/knn.png\"}\n              alt=\"\"\n              width=\"70%\"\n              height=\"70%\"\n              className=\"content\"\n            />\n          </a>\n          <div className=\"proj_details\">\n            <div className=\"proj_title\">\n              <a href=\"https://github.com/mnguyen96/Stock-sentiment-predictor\">\n                <b>Stock Sentiment Predictor</b>\n              </a>\n            </div>\n            <div className=\"description\">\n              I made a learning program that applies the KNN algorithm and\n              historic weekly stock data from yahoo finance to predict stock\n              sentiment and movement.\n            </div>\n\n            <div className=\"language_container\">\n              <span className=\"proj_languages\">Python</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"node\">\n          <a href=\"https://mnguyen96.github.io/audiovisualizer/index.html\">\n            <img\n              width=\"70%\"\n              src={process.env.PUBLIC_URL + \"/media/vis.png\"}\n              alt=\"\"\n              height=\"70%\"\n              className=\"content\"\n            />\n          </a>\n          <div className=\"proj_details\">\n            <div className=\"proj_title\">\n              <a href=\"https://mnguyen96.github.io/audiovisualizer/index.html\">\n                <b>Audio Visualizer</b>\n              </a>\n            </div>\n            <div className=\"description\">\n              I made an audio visualizer using Javascript and Three.js. Using\n              the Web Audio API, the program analyzes frequency data from a\n              AnalyserNode and displays a specific hue and height based on the\n              read frequency.\n            </div>\n            <div className=\"language_container\">\n              <span className=\"proj_languages\">HTML</span>\n              <span className=\"proj_languages\">CSS</span>\n              <span className=\"proj_languages\">JavaScript</span>\n              <span className=\"proj_languages\">Three.js</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Projects from \"./components/projects\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nlibrary.add(faHome);\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path={\"/\"} component={Header} exact />\n          <Route path={\"/projects\"} component={Projects} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}